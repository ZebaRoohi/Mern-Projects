openapi: 3.0.0
info:
  title: Note Application API Documentation
  version: 1.0.0
  description: API documentation for the Note Application by Zeba Roohi
servers:
  - url: http://localhost:3000
    description: Local development server
paths:
  /api/notes:
    get:
      summary: Retrieve all notes
      description: Retrieve a list of all notes stored in the database.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of notes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
    post:
      summary: Create a new note
      description: Create a new note with the provided data.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteInput'
      responses:
        '201':
          description: Note created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
  /api/user/register:
    post:
      summary: Register a new user
      description: Register a new user with the provided data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationInput'
      responses:
        '201':
          description: User registered successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request data.
  /api/user/login:
    post:
      summary: User login
      description: Authenticate and login a user with the provided credentials.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInput'
      responses:
        '200':
          description: Login successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized access or invalid credentials.
  /api/user/info:
    get:
      summary: Get user information
      description: Retrieve information about the currently logged-in user.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User information retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized access.
components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        content:
          type: string
    NoteInput:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    UserRegistrationInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    UserLoginInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
